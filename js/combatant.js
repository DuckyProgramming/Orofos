class combatant{
	constructor(layer,x,y,type,team){
		this.layer=layer
		this.position={x:x,y:y}
		this.type=type
		this.team=team
		this.size=1
		this.flip=1-this.team*2
		this.direction=0
		if(this.type==0){
			this.fade=0
		}else{
			this.fade=1
		}
		this.name=types.combatant[this.type].name
		this.life=types.combatant[this.type].life
		this.speed=types.combatant[this.type].speed
		this.damage=types.combatant[this.type].damage
		this.attacks=types.combatant[this.type].attacks
		this.base={position:{x:this.position.x,y:this.position.y},life:this.life}
		this.collect={life:this.life}
		this.boost=[0,0,0]
		this.boostFade=[0,0,0]
		this.boostDisplay=[]
		this.boostColor=[[200,0,0],[0,150,255],[255,255,50]]
		this.infoFade=0
		this.stacking=this.speed
	}
	displayLife(){
		this.layer.translate(this.base.position.x,this.base.position.y)
		this.layer.noStroke()
		this.layer.fill(0,this.fade)
		this.layer.rect(0,20,62,10,5)
		this.layer.fill(150,this.fade)
		this.layer.rect(0,20,60,8,4)
		this.layer.fill(240,0,0,this.fade)
		this.layer.rect((max(0,this.collect.life)/this.base.life)*30-30,20,(max(0,this.collect.life)/this.base.life)*60,min((max(0,this.collect.life)/this.base.life)*120,8),4)
		this.layer.fill(min(255,510-max(0,this.life)/this.base.life*510)-max(0,5-max(0,this.life)/this.base.life*30)*25,max(0,this.life)/this.base.life*510,0,this.fade)
		this.layer.rect((max(0,this.life)/this.base.life)*30-30,20,(max(0,this.life)/this.base.life)*60,min((max(0,this.life)/this.base.life)*120,8),4)
		for(g=0,lg=this.boostDisplay.length;g<lg;g++){
			this.layer.fill(this.boostColor[this.boostDisplay[g]][0],this.boostColor[this.boostDisplay[g]][1],this.boostColor[this.boostDisplay[g]][2],this.boostFade[this.boostDisplay[g]]*this.fade)
			this.layer.ellipse(-21+g*14,42,12,12)
		}
		this.layer.fill(0,this.fade)
		this.layer.textSize(8)
		this.layer.text(max(0,ceil(this.life*10)/10)+"/"+max(0,ceil(this.base.life)),0,21)
		this.layer.textSize(10)
		this.layer.text(this.name,0,33)
		for(g=0,lg=this.boostDisplay.length;g<lg;g++){
			this.layer.fill(0,this.boostFade[this.boostDisplay[g]]*this.fade)
			if(this.boost[this.boostDisplay[g]]>0){
				this.layer.text('+'+this.boost[this.boostDisplay[g]],-21+g*14,42)
			}else{
				this.layer.text(this.boost[this.boostDisplay[g]],-21+g*14,42)
			}
		}
		this.layer.translate(-this.base.position.x,-this.base.position.y)
	}
	display(){
		this.layer.translate(this.position.x,this.position.y)
		this.layer.rotate(this.direction)
		this.layer.scale(this.size*this.flip,this.size)
		switch(this.type){
			case 1:
				this.layer.stroke(80,this.fade)
				this.layer.strokeWeight(4)
				this.layer.line(-4,-30,-8,0)
				this.layer.line(4,-30,8,0)
				this.layer.line(-6,-48,-15,-24)
				this.layer.line(6,-48,15,-24)
				this.layer.noStroke()
				this.layer.fill(80,this.fade)
				this.layer.ellipse(0,-45,18,36)
				this.layer.fill(240,220,180,this.fade)
				this.layer.ellipse(0,-75,30,30)
				this.layer.fill(0,this.fade)
				this.layer.ellipse(4,-72,4,4)
				this.layer.ellipse(12,-72,4,4)
			break
		}
		this.layer.scale(1/this.size/this.flip,1/this.size)
		this.layer.rotate(-this.direction)
		this.layer.translate(-this.position.x,-this.position.y)
	}
	update(){
		this.boostDisplay=[]
		for(g=0,lg=this.boost.length;g<lg;g++){
			if(this.boostFade[g]!=0){
				this.boostDisplay.push(g)
			}
			if(this.boostFade[g]<1&&this.boost[g]!=0){
				this.boostFade[g]=round(this.boostFade[g]*10+1)/10
			}
			if(this.boostFade[g]>0&&this.boost[g]==0){
				this.boostFade[g]=round(this.boostFade[g]*10-1)/10
			}
			this.boost[g]=constrain(this.boost[g],-4,4)
		}
		if(this.life<=0&&this.fade>0){
			this.fade-=1/30
		}
		this.collect.life=this.collect.life*0.9+this.life*0.1
	}
}