function setupGraphics(){
	graphics.main=createGraphics(900,600)
    for(a=0;a<1;a++){
		graphics.backgrounds.push(createGraphics(1800,600));
		graphics.backgrounds[a].noStroke();
	}
	graphics.minor.push(createGraphics(200,200))
	graphics.minor.push(createGraphics(160,160))
	graphics.minor.push(createGraphics(200,200))
	graphics.minor.push(createGraphics(200,200))
	graphics.minor.push(createGraphics(200,200))
	graphics.minor.push(createGraphics(160,160))
	graphics.minor.push(createGraphics(160,240))
	graphics.minor.push(createGraphics(160,160))
	graphics.minor.push(createGraphics(200,200))
    angleMode(DEGREES)
	textAlign(CENTER,CENTER)
	rectMode(CENTER)
	colorMode(RGB,255,255,255,1)
    setupLayer(graphics.main)
    for(a=0,la=graphics.backgrounds.length;a<la;a++){
		setupLayer(graphics.backgrounds[a]);
	}
	for(a=0,la=graphics.minor.length;a<la;a++){
		setupLayer(graphics.minor[a]);
	}
	graphics.backgrounds[0].fill(120,100,80)
	graphics.backgrounds[0].beginShape()
	for(e=0;e<21;e++){
		graphics.backgrounds[0].vertex(e*80,200+pow(3,(e%20)+4)%300)
	}
    graphics.backgrounds[0].vertex(graphics.backgrounds[0].width*2,graphics.backgrounds[0].height)
	graphics.backgrounds[0].vertex(0,graphics.backgrounds[0].height)
	graphics.backgrounds[0].endShape()
	for(a=0;a<2;a++){
		graphics.minor[a*8].noStroke()
		graphics.minor[a*8].translate(100,100)
		graphics.minor[a*8].rotate(-15)
		graphics.minor[a*8].fill(138,141,207)
		graphics.minor[a*8].arc(0,0,160,160,0,60)
		if(a==0){
			graphics.minor[a*8].arc(0,0,160,160,180,240)
		}
		graphics.minor[a*8].erase()
		graphics.minor[a*8].ellipse(-15,-25,100,100)
		graphics.minor[a*8].ellipse(15,25,100,100)
		graphics.minor[a*8].noErase()
		graphics.minor[a*8].fill(189,187,237)
		graphics.minor[a*8].rect(0,0,160,6,3)
		graphics.minor[a*8].rotate(15)
		graphics.minor[a*8].translate(-100,-100)
	}
	graphics.minor[1].noStroke()
	graphics.minor[1].fill(224,181,156)
	graphics.minor[1].ellipse(80,80,120,120)
	graphics.minor[1].fill(204,139,122)
	graphics.minor[1].rect(80,80,120,6)
	graphics.minor[1].quad(24,55,136,55,137,61,23,61)
	graphics.minor[1].quad(24,105,136,105,137,99,23,99)
	graphics.minor[1].quad(41,33,119,33,124,39,36,39)
	graphics.minor[1].quad(41,127,119,127,124,121,36,121)
	graphics.minor[5].stroke(201,61,96)
	graphics.minor[5].strokeWeight(24)
	graphics.minor[5].line(32,50,80,137)
	graphics.minor[5].line(128,50,80,137)
	graphics.minor[5].stroke(233,216,194)
	graphics.minor[5].strokeWeight(8)
	graphics.minor[5].point(80,132)
	graphics.minor[5].point(64,104)
	graphics.minor[5].point(96,104)
	graphics.minor[5].point(48,76)
	graphics.minor[5].point(112,76)
	graphics.minor[5].point(32,48)
	graphics.minor[5].point(128,48)
	graphics.minor[6].translate(80,140)
	graphics.minor[6].scale(0.8)
	graphics.minor[6].noStroke()
	graphics.minor[6].fill(236,130,138)
	for(a=0;a<5;a++){
		graphics.minor[6].rotate(72)
		graphics.minor[6].beginShape()
		graphics.minor[6].vertex(0,0)
		graphics.minor[6].bezierVertex(-14,-14,-14,-28,0,-42)
		graphics.minor[6].bezierVertex(14,-28,14,-14,0,0)
		graphics.minor[6].endShape()
	}
	graphics.minor[6].fill(213,88,102)
	for(a=0;a<5;a++){
		graphics.minor[6].rotate(72)
		graphics.minor[6].beginShape()
		graphics.minor[6].vertex(0,0)
		graphics.minor[6].bezierVertex(-7,-10,-7,-20,0,-30)
		graphics.minor[6].bezierVertex(7,-20,7,-10,0,0)
		graphics.minor[6].endShape()
	}
	graphics.minor[6].fill(255,161,161)
	graphics.minor[6].ellipse(0,0,4,4)
	graphics.minor[6].scale(1.25)
	graphics.minor[6].translate(0,-30)
	graphics.minor[6].noStroke()
	graphics.minor[6].fill(226,120,128)
	for(a=0;a<5;a++){
		graphics.minor[6].rotate(72)
		graphics.minor[6].beginShape()
		graphics.minor[6].vertex(0,0)
		graphics.minor[6].bezierVertex(-14,-14,-14,-28,0,-42)
		graphics.minor[6].bezierVertex(14,-28,14,-14,0,0)
		graphics.minor[6].endShape()
	}
	graphics.minor[6].fill(203,78,92)
	for(a=0;a<5;a++){
		graphics.minor[6].rotate(72)
		graphics.minor[6].beginShape()
		graphics.minor[6].vertex(0,0)
		graphics.minor[6].bezierVertex(-7,-10,-7,-20,0,-30)
		graphics.minor[6].bezierVertex(7,-20,7,-10,0,0)
		graphics.minor[6].endShape()
	}
	graphics.minor[6].fill(255,151,151)
	graphics.minor[6].ellipse(0,0,4,4)
	graphics.minor[6].translate(-80,-370)
	graphics.minor[7].translate(80,80)
	graphics.minor[7].noStroke()
	graphics.minor[7].fill(253,233,242)
	for(a=0;a<5;a++){
		graphics.minor[7].rotate(72)
		graphics.minor[7].beginShape()
		graphics.minor[7].vertex(0,0)
		graphics.minor[7].bezierVertex(-20,-14,-20,-28,0,-42)
		graphics.minor[7].bezierVertex(20,-28,20,-14,0,0)
		graphics.minor[7].endShape()
	}
	graphics.minor[7].fill(252,255,252)
	for(a=0;a<5;a++){
		graphics.minor[7].rotate(72)
		graphics.minor[7].beginShape()
		graphics.minor[7].vertex(0,0)
		graphics.minor[7].bezierVertex(-10,-10,-10,-20,0,-30)
		graphics.minor[7].bezierVertex(10,-20,10,-10,0,0)
		graphics.minor[7].endShape()
	}
	graphics.minor[7].fill(255,231,238)
	graphics.minor[7].ellipse(0,0,4,4)
	graphics.minor[7].translate(-80,-80)
	graphics.minor[2].noStroke()
	graphics.minor[2].fill(0)
	graphics.minor[2].ellipse(100,100,180,180)
	graphics.minor[2].fill(227,63,80)
	graphics.minor[2].arc(100,100,150,150,-38,270/7-52)
	graphics.minor[2].fill(232,158,77)
	graphics.minor[2].arc(100,100,150,150,270/7-38,540/7-52)
	graphics.minor[2].fill(237,236,127)
	graphics.minor[2].arc(100,100,150,150,540/7-38,810/7-52)
	graphics.minor[2].fill(114,154,92)
	graphics.minor[2].arc(100,100,150,150,810/7-38,1080/7-52)
	graphics.minor[2].fill(101,181,156)
	graphics.minor[2].arc(100,100,150,150,1080/7-38,1350/7-52)
	graphics.minor[2].fill(71,151,194)
	graphics.minor[2].arc(100,100,150,150,1350/7-38,1620/7-52)
	graphics.minor[2].fill(100,89,147)
	graphics.minor[2].arc(100,100,150,150,1620/7-38,218)
	graphics.minor[2].fill(255,238,231)
	graphics.minor[2].ellipse(100+cos(232)*67.5,100+sin(232)*67.5,10,10)
	graphics.minor[2].ellipse(100-cos(232)*67.5,100+sin(232)*67.5,10,10)
	graphics.minor[2].fill(0)
	graphics.minor[2].ellipse(100,100,120,120)
	graphics.minor[2].image(graphics.minor[0],0,0,200,200)
	graphics.minor[2].fill(255)
	graphics.minor[2].ellipse(100,100,90,90)
	graphics.minor[2].fill(0)
	graphics.minor[2].ellipse(100,100,75,75)
	graphics.minor[2].stroke(0)
	graphics.minor[2].strokeWeight(3)
	graphics.minor[2].fill(255)
	graphics.minor[2].beginShape()
	graphics.minor[2].vertex(60,22)
	graphics.minor[2].bezierVertex(140,80,80,120,140,178)
	graphics.minor[2].bezierVertex(60,120,120,90,60,22)
	graphics.minor[2].endShape()
	graphics.minor[2].fill(255)
	graphics.minor[2].beginShape()
	graphics.minor[2].vertex(140,22)
	graphics.minor[2].bezierVertex(60,80,120,120,60,178)
	graphics.minor[2].bezierVertex(140,120,80,90,140,22)
	graphics.minor[2].endShape()
	graphics.minor[2].ellipse(100,100,60,60)
	graphics.minor[2].image(graphics.minor[6],60,40,80,120)
	graphics.minor[2].image(graphics.minor[1],80,12.5,40,40)
	graphics.minor[2].image(graphics.minor[5],80,12.5,40,40)
	for(a=0;a<2;a++){
		graphics.minor[a+3].noStroke()
		graphics.minor[a+3].fill(0)
		graphics.minor[a+3].ellipse(100,100,180,180)
		graphics.minor[a+3].fill(255)
		graphics.minor[a+3].arc(100,100,150,150,-38,270/7-52)
		graphics.minor[a+3].arc(100,100,150,150,540/7-38,810/7-52)
		graphics.minor[a+3].arc(100,100,150,150,1080/7-38,1350/7-52)
		graphics.minor[a+3].arc(100,100,150,150,1620/7-38,218)
		graphics.minor[a+3].ellipse(100+cos(232)*67.5,100+sin(232)*67.5,10,10)
		graphics.minor[a+3].ellipse(100-cos(232)*67.5,100+sin(232)*67.5,10,10)
		if(a==0){
			graphics.minor[a+3].fill(200,50,50)
		}
		graphics.minor[a+3].arc(100,100,150,150,270/7-38,540/7-52)
		graphics.minor[a+3].arc(100,100,150,150,810/7-38,1080/7-52)
		graphics.minor[a+3].arc(100,100,150,150,1350/7-38,1620/7-52)
		graphics.minor[a+3].fill(0)
		graphics.minor[a+3].ellipse(100,100,120,120)
		graphics.minor[a+3].fill(255)
		if(a==0){
			graphics.minor[a+3].triangle(100,32.5,88,24.5,92,20.5)
			graphics.minor[a+3].triangle(100,32.5,88,40.5,92,44.5)
			graphics.minor[a+3].triangle(100,32.5,112,24.5,108,20.5)
			graphics.minor[a+3].triangle(100,32.5,112,40.5,108,44.5)
		}
		graphics.minor[a+3].ellipse(100,100,90,90)
		graphics.minor[a+3].fill(0)
		graphics.minor[a+3].ellipse(100,100,75,75)
		graphics.minor[a+3].stroke(0)
		graphics.minor[a+3].strokeWeight(3)
		graphics.minor[a+3].fill(255)
		graphics.minor[a+3].beginShape()
		graphics.minor[a+3].vertex(60,22)
		graphics.minor[a+3].bezierVertex(140,80,80,120,140,178)
		graphics.minor[a+3].bezierVertex(60,120,120,90,60,22)
		graphics.minor[a+3].endShape()
		graphics.minor[a+3].fill(255)
		graphics.minor[a+3].beginShape()
		graphics.minor[a+3].vertex(140,22)
		graphics.minor[a+3].bezierVertex(60,80,120,120,60,178)
		graphics.minor[a+3].bezierVertex(140,120,80,90,140,22)
		graphics.minor[a+3].endShape()
		graphics.minor[a+3].ellipse(100,100,60,60)
		if(a==0){
			graphics.minor[a+3].fill(0)
			graphics.minor[a+3].noStroke()
			graphics.minor[a+3].arc(100,100,40,40,-135,45)
			graphics.minor[a+3].arc(100,100,40,40,45,225)
			graphics.minor[a+3].stroke(255)
			graphics.minor[a+3].strokeWeight(6)
			graphics.minor[a+3].line(85,85,115,115)
		}
	}
}
function setupEnd(end){
	graphics.end=createGraphics(graphics.main.width,graphics.main.height)
	graphics.characters=[]
	setupLayer(graphics.end)
	switch(end){
		case -1:
			graphics.end.background(200,170,120)
			graphics.end.image(graphics.backgrounds[0],0,0)
			for(a=0;a<4;a++){
				graphics.characters.push(new combatant(graphics.end,150+a*200,550+random(0,20),current.combatants[a].type,0,0,0))
				graphics.characters[a].size=2
				graphics.characters[a].die()
				graphics.characters[a].display()
			}
			graphics.end.noStroke()
            graphics.end.fill(150,125,90)
            graphics.end.rect(450,575,910,50)
			graphics.end.fill(0)
			graphics.end.textSize(40)
			graphics.end.noStroke()
			graphics.end.text('Game End\nDefeat',graphics.end.width/2,100)
		break
		case 0:
			graphics.end.background(200,170,120)
			graphics.end.image(graphics.backgrounds[0],0,0)
			for(a=0;a<4;a++){
				graphics.characters.push(new combatant(graphics.end,100+a*100,550,current.combatants[a].type,0,0,0))
				graphics.characters[a].size=2
				graphics.characters[a].display()
			}
			graphics.characters.push(new combatant(graphics.end,650,550,122,0,0,0))
			graphics.characters.push(new combatant(graphics.end,700,550,121,0,0,0))
			graphics.characters.push(new combatant(graphics.end,750,550,123,0,0,0))
			graphics.characters.push(new combatant(graphics.end,800,550,122,0,0,0))
			graphics.characters[4].display()
			graphics.characters[5].display()
			graphics.characters[6].display()
			graphics.characters[7].display()
			graphics.end.noStroke()
            graphics.end.fill(150,125,90)
            graphics.end.rect(450,575,910,50)
			graphics.end.fill(0)
			graphics.end.textSize(40)
			graphics.end.noStroke()
			graphics.end.text('Game End\nVictory',graphics.end.width/2,100)
		break
		case 1:
			graphics.end.background(200,170,120)
			graphics.end.image(graphics.backgrounds[0],0,0)
			graphics.characters.push(new combatant(graphics.end,50,550,current.combatants[0].type,0,0,0))
			for(a=0;a<3;a++){
				graphics.characters.push(new combatant(graphics.end,250+a*150,500-a*75,current.combatants[a+1].type,0,0,0))
			}
			graphics.characters.push(new combatant(graphics.end,800,230,88,0,0,0))
			for(a=0;a<4;a++){
				graphics.characters[a].size=2
				graphics.characters[a+1].direction-=20
			}
			graphics.characters[4].size=2
			for(a=0;a<5;a++){
				graphics.characters[a].display()
			}
			graphics.end.noStroke()
            graphics.end.fill(150,125,90)
            graphics.end.rect(450,575,910,50)
			graphics.end.fill(100)
			graphics.end.quad(150,550,200,550,1100,100,1050,100)
			graphics.end.fill(0)
			graphics.end.textSize(40)
			graphics.end.noStroke()
			graphics.end.text('Game End\nVictory',graphics.end.width/2,100)
		break
		case 2:
			graphics.end.background(200,170,120)
			graphics.end.image(graphics.backgrounds[0],0,0)
			for(a=0;a<4;a++){
				graphics.characters.push(new combatant(graphics.end,150+a*200,550+random(0,20),current.combatants[a].type,0,0,0))
				graphics.characters[a].size=2
				graphics.characters[a].die()
				graphics.characters[a].display()
			}
			graphics.characters.push(new combatant(graphics.end,450,550,99,0,1,0))
			graphics.characters[4].size=2
			graphics.characters[4].display()
			graphics.end.noStroke()
            graphics.end.fill(150,125,90)
            graphics.end.rect(450,575,910,50)
			graphics.end.fill(0)
			graphics.end.textSize(40)
			graphics.end.noStroke()
			graphics.end.text('Game End\nDefeat',graphics.end.width/2,100)
		break
		case 3:
			graphics.end.background(200,170,120)
			graphics.end.image(graphics.backgrounds[0],0,0)
			for(a=0;a<4;a++){
				graphics.characters.push(new combatant(graphics.end,150+a*200,550+random(0,20),current.combatants[a].type,0,0,0))
				graphics.characters[a].size=2
				graphics.characters[a].die()
				graphics.characters[a].display()
			}
			graphics.characters.push(new combatant(graphics.end,600,550,88,0,0,0))
			graphics.characters.push(new combatant(graphics.end,500,550,61,0,0,0))
			graphics.characters.push(new combatant(graphics.end,800,550,61,0,1,0))
			graphics.characters.push(new combatant(graphics.end,700,550,99,0,1,0))
			for(a=0;a<4;a++){
				graphics.characters[a+4].size=2
				graphics.characters[a+4].display()
			}
			graphics.end.noStroke()
            graphics.end.fill(150,125,90)
            graphics.end.rect(450,575,910,50)
			graphics.end.fill(0)
			graphics.end.textSize(40)
			graphics.end.noStroke()
			graphics.end.text('Game End\nDefeat',graphics.end.width/2,100)
		break
		case 4:
			graphics.end.background(200,170,120)
			graphics.end.image(graphics.backgrounds[0],0,0)
			for(a=0;a<4;a++){
				graphics.characters.push(new combatant(graphics.end,200+a*100+floor(a/2)*200,550,current.combatants[a].type,0,1,0))
				graphics.characters[a].size=2
				graphics.characters[a].display()
			}
			graphics.characters.push(new combatant(graphics.end,450,550,99,0,1,0))
			graphics.characters[4].anim[5]=1
			if(current.cut.totalLife>current.cut.totalBaseLife*0.2){
				graphics.characters[4].anim[6]=1
			}
			if(current.cut.totalLife>current.cut.totalBaseLife*0.4){
				graphics.characters[4].anim[7]=1
			}
			if(current.cut.totalLife>current.cut.totalBaseLife*0.6){
				graphics.characters[4].anim[8]=1
			}
			if(current.cut.totalLife>current.cut.totalBaseLife*0.8){
				graphics.characters[4].anim[9]=1
			}
			graphics.characters[4].size=2
			graphics.characters[4].display()
			graphics.end.noStroke()
            graphics.end.fill(150,125,90)
            graphics.end.rect(450,575,910,50)
			graphics.end.fill(0)
			graphics.end.textSize(40)
			graphics.end.noStroke()
			graphics.end.text('Game End\nVictory',graphics.end.width/2,100)
		break
	}
}